<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// set screen, cursor &amp; cursor position
window_set_fullscreen(true);
window_set_cursor(cr_none);
cursor_sprite = spr_cursor01a;
window_mouse_set(display_get_width() / 2, display_get_height() / 2);

// difficulty settings
if (global.difficulty = "Easy") {
    global.target_groupsize = 5;
    global.target01_hp = 20; 
    global.damage = 10;
    global.maxbullets = 12;
    global.multiplicator = 1;
    global.target_close_speed = 4;
    global.target_mid_speed = 2;
    global.target_far_speed = 1;
    target_distance1 = 190; //190, min 140
    target_distance2 = 160; //150, min 90
    target_distance3 = 145; //125, min 65
}
if (global.difficulty = "Medium") {
    global.target_groupsize = 6;
    global.target01_hp = 30; 
    global.damage = 10;
    global.maxbullets = 10;
    global.multiplicator = 1.35
    global.target_close_speed = 5;
    global.target_mid_speed = 3.5;
    global.target_far_speed = 2;
    target_distance1 = 165;
    target_distance2 = 145;
    target_distance3 = 120;
}
if (global.difficulty = "Hard") {
    global.target_groupsize = 7;
    global.target01_hp = 40; 
    global.damage = 8;
    global.maxbullets = 8;
    global.multiplicator = 1.6
    global.target_close_speed = 7;
    global.target_mid_speed = 5;
    global.target_far_speed = 2.5;
    target_distance1 = 140;
    target_distance2 = 125;
    target_distance3 = 110;
}

// game state &amp; player values
global.ready = false;
global.wait = 0;
global.enemycounter = 0;
global.bullets = 0;
global.bullets = global.maxbullets;
global.shots = 0;
global.hits = 0;
global.miss = 0;
global.accuracy = 100;
global.start = false;
global.timer = 0;
counter = 1;
missed = false;

//spawn ui &amp; starting signal
instance_create(0, 0, obj_bulletcounter);
instance_create(0, 0, obj_ample);

// set movement &amp; behaviour
if (global.level = "level1") {
    global.target01_skin = "target";
    global.target01_move = "left";
    global.target01_behaviour = "wobble";
    
    global.target02_skin = "soldier";
    global.target02_move = "r_alternate";
    global.target02_behaviour = "hide";
    
    global.target03_skin = "ninja";
    global.target03_move = "left";
    global.target03_behaviour = "shadow";

    // spawn walls
    instance_create(0, 495, obj_wall01);
    instance_create(0, 495, obj_wall01_top);
    instance_create(0, 287, obj_wall02);
    instance_create(0, 287, obj_wall02_top);
    instance_create(0, 148, obj_wall03);
    instance_create(0, 148, obj_wall03_top);
}

// set movement &amp; behaviour
if (global.level = "level2") {
    global.target01_skin = "soldier";
    global.target01_move = "left";
    global.target01_behaviour = "wobble";
    
    global.target02_skin = "soldier";
    global.target02_move = "r_alternate";
    global.target02_behaviour = "hide";
    
    global.target03_skin = "soldier";
    global.target03_move = "l_alternate";
    global.target03_behaviour = "";

    // spawn boxes
    box1_length = 100;
    box2_length = 64;
    box3_length = 50;
    row = 0;
    repeat(11){
        random_height = irandom_range(-box1_length/4, box1_length/4) - box1_length/4;
        instance_create(row * box1_length, room_height - random_height - box1_length, obj_box01)
        instance_create(row * box1_length, room_height - random_height, obj_box01)
        row += 1;
    }
    row = 0;
    repeat(16){
        random_height = 215 + irandom_range(-box2_length/4, box2_length/4) - box2_length/4;
        instance_create(row * box2_length, room_height - random_height - box2_length, obj_box02)
        instance_create(row * box2_length, room_height - 225, obj_box02)
        row += 1;
    }
    row = 0;
    repeat(20){
        random_height = 355 + irandom_range(-box3_length/4, box3_length/4) - box3_length/4;
        instance_create(row * box3_length, room_height - random_height - box3_length, obj_box03)
        instance_create(row * box3_length, room_height - 370, obj_box03)
        row += 1;
    }
}

// spawn targets
repeat(global.target_groupsize) {
    instance_create(target_distance1 * counter - 75, 446, obj_target01);
    instance_create(target_distance2 * counter - 45, 266, obj_target02);
    instance_create(target_distance3 * counter - 30, 136, obj_target03);
    counter++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// catch mouse
if (global.ready = false) {
    window_mouse_set(display_get_width() / 2, display_get_height() / 2);
}

missed = true;

// wait 4 seconds
global.wait += 1;

if (global.wait &gt;= 240) {
    global.ready = true;
}

// timer
global.enemiecount = instance_number(obj_targetparent);

if (global.enemiecount &gt; 0) {
    if (global.ready = true) {
        global.timer += 1;
    }
} else {
    if (!instance_exists(obj_button_back)) {
        instance_create(room_width / 2, room_height - 100, obj_button_back);
        instance_create(0, 0, obj_menu_window_300);
    }
// button back
    if (mouse_check_button_pressed(mb_left)) {
        instance_create(mouse_x, mouse_y, obj_hit);
    }
}

// shoot
    if (mouse_check_button_pressed(mb_left)) {
        if (global.bullets &lt;= 0) {
            audio_play_sound(snd_gun_empty01, 10, false);
        }
        else {
            audio_play_sound(snd_gunshot01, 10, false);
                if (global.enemiecount &gt; 0) {
                    global.shots += 1;
                    global.bullets -= 1;
                }
            }
        instance_create(0, 0, obj_bulletcounter);
    }
// reload
    if (mouse_check_button_pressed(mb_right)) {
        global.bullets = global.maxbullets;
        audio_play_sound(snd_reload_gun01, 10, false);
        instance_create(0, 0, obj_bulletcounter);
    }
    
    if (mouse_check_button_released(mb_left)) {
        cursor_sprite = spr_cursor01a;
    }

if (global.ready = true) {
    if (global.enemiecount &gt; 0) {
// hit
        // first wall check
            if (position_meeting(mouse_x, mouse_y, obj_target01_parent)) {
                hit_object1 = scr_get_lowest_depth(mouse_x, mouse_y, obj_wall01_parent);
                if (hit_object1 = -1) { scr_shot(); }
            }
        // second wall check
            if (position_meeting(mouse_x, mouse_y, obj_target02_parent)) {
                hit_object2 = scr_get_lowest_depth(mouse_x, mouse_y, obj_wall02_parent);
                if (hit_object2 = -1) { scr_shot(); }
            }
        // third wall check
            if (position_meeting(mouse_x, mouse_y, obj_target03_parent)) {
                hit_object3 = scr_get_lowest_depth(mouse_x, mouse_y, obj_wall03_parent);
                if (hit_object3 = -1) { scr_shot(); }
            }

    }
// hit walls
    if (missed = true) {
        if (mouse_check_button_pressed(mb_left)) {
            if (global.bullets &gt; 0) {
                rnd_sound = choose(1,2,3,4,5)
                if (rnd_sound = 1) {audio_play_sound(snd_ricochet01, 10, false);}
                if (rnd_sound = 2) {audio_play_sound(snd_ricochet02, 10, false);}
                if (rnd_sound = 3) {audio_play_sound(snd_ricochet03, 10, false);}
                if (rnd_sound = 4) {audio_play_sound(snd_ricochet04, 10, false);}
                if (rnd_sound = 5) {audio_play_sound(snd_ricochet05, 10, false);}
                if (position_meeting(mouse_x, mouse_y, obj_wall_parent)) {
                    instance_create(mouse_x, mouse_y, obj_crack01);
                }
            }
        }
    }
// accuracy
    if (global.shots &gt; 0) {
        if (global.hits &gt; 0) {
            global.accuracy = 100 / (global.shots / global.hits);
        }
        else global.accuracy = 0;
    }
}

// quit via ESC
if (keyboard_check_released(vk_escape))
{
    room_goto(menu);
    audio_stop_all();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1);
draw_set_blend_mode(bm_normal);
draw_set_colour(c_aqua);
draw_set_font(font1);
draw_set_halign(fa_center);
draw_text(room_width / 2, 10, string(global.timer / 60));
draw_text(840, 10, "Targets: " + string(global.enemiecount));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
